# sources:
# http://www.jgoodwin.net/?p=1223
# http://orgtheory.wordpress.com/2012/05/16/the-fragile-network-of-econ-soc-readings/
# http://nealcaren.web.unc.edu/a-sociology-citation-network/

# go to http://apps.webofknowledge.com.offcampus.lib.washington.edu/
# refine search by journal... perhaps archaeolog* OR antiquity OR archeolog* in 'publication title', 
# 
# refine to last 10 years only
# hit 'search'
# must have <10k results to enable citation data
# click 'create citation report' tab at the top

# if working manually: 
# scroll to bottom of search results, where 'Output Records' section is
# Step 1: Select records -> 1-500 since 500 is max 
# Step 2: Select content -> Full Record & Cited References (this seems to have changed)
# Step 3: Select destination -> save to plain text

# Once we've got the data, use or adapt this python script
# http://www.unc.edu/~ncaren/cite_network/citenet.py
# and note the endnote here: http://www.jgoodwin.net/?p=1223

# then make network diagrams and calculate typical sna stats...

####
# Attempting to automate WoS data collection with RSelenium...
vignette('RSelenium-basics')
# setup broswer and selenium
RSelenium::checkForServer()
RSelenium::startServer()
library(RSelenium)
remDr <- remoteDriver()
remDr$open()
# go to http://apps.webofknowledge.com.offcampus.lib.washington.edu/
# refine search by journal... perhaps archaeolog* OR antiquity OR archeolog* in 'publication title', 
# document type: article (must have <10k results to enable citation data)
# click 'create citation report' tab at the top
# get URL of first page and paste in next line
remDr$navigate("http://apps.webofknowledge.com/CitationReport.do?product=UA&search_mode=CitationReport&SID=4Fyz44lRVFdkcFexHMz&page=1&cr_pqid=5&viewType=summary")
# do the first page manually to set the 'save file' and 'do this automatically', then let loop do the work after that

# Loop to get citation data for each page of results, each iteration will save a txt file
for(i in 1:610){
  # click on 'save to text file'
  result <- try(
  webElem <- remDr$findElement(using = 'id', value = "select2-chosen-1")
  ); if(class(result) == "try-error") next;
webElem$clickElement()
  # click on 'send' on pop-up window
  result <- try(
  webElem <- remDr$findElement(using = "css", "span.quickoutput-action")
   ); if(class(result) == "try-error") next;
webElem$clickElement()
  # refresh the page to get rid of the pop-up
remDr$refresh()
  # advance to the next page of results
result <- try(
  webElem <- remDr$findElement(using = 'xpath', value = "(//form[@id='summary_navigation']/table/tbody/tr/td[3]/a/i)[2]")
  ); if(class(result) == "try-error") next;
webElem$clickElement()
print(i) 
}



